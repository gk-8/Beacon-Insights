<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="using:Template10.Controls"
                    xmlns:converters="using:BeaconInsightsUWP.Converters"
                    xmlns:base="using:BeaconInsightsUWP.Base">

    <x:Double x:Key="NarrowMinWidth">0</x:Double>
    <x:Double x:Key="NormalMinWidth">521</x:Double>
    <x:Double x:Key="WideMinWidth">1200</x:Double>

    <Color x:Key="CustomColor">Teal</Color>
    <SolidColorBrush x:Key="CustomColorBrush" Color="{StaticResource CustomColor}" />

    <Color x:Key="ContrastColor">White</Color>
    <SolidColorBrush x:Key="ContrastColorBrush" Color="{StaticResource ContrastColor}" />

    <base:Locator x:Key="Locator"/>

    <!--Converters-->
    <converters:BoolToVisibilityConverter x:Name="BoolToVisibilityConverter"/>
    <converters:BluetoothAddressToColorConverter x:Name="BluetoothAddressToColorConverter"/>
    <converters:BluetoothAddressToNameConverter x:Name="BluetoothAddressToNameConverter"/>
    <converters:NullToVisibilityConverter x:Name="NullToVisibilityConverter"/>
    <converters:TimeSincePowerUpConverter x:Name="TimeSincePowerUpConverter"/>
    <converters:RadarPositionVisibilityConverter x:Name="RadarPositionVisibilityConverter"/>
    <converters:RadarPositionRowConverter x:Name="RadarPositionRowConverter"/>
    <converters:RadarPositionColumnConverter x:Name="RadarPositionColumnConverter"/>

    <!--General DataTemplates-->
    <DataTemplate x:Key="BeaconDataFramesCountListViewItemTemplate">
        <Grid Height="100">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Image Width="75" Height="75" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.8" Source="ms-appx:///Assets/beacon_black.png"/>
            <Rectangle Fill="{Binding BluetoothAddress, Converter={StaticResource BluetoothAddressToColorConverter}}" Opacity="0.32" Width="80" Height="80" VerticalAlignment="Center" HorizontalAlignment="Center" RadiusX="5" RadiusY="5"/>
            <Grid Grid.Column="1" Padding="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock FontSize="18" Foreground="Black" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Text="{Binding BluetoothAddress, Converter={StaticResource BluetoothAddressToNameConverter}}"/>
                <TextBlock Grid.Row="2" FontSize="14" Foreground="{ThemeResource TextBoxDisabledForegroundThemeBrush}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap">
                        <Run Text="Data frames: "/>
                        <Run Text="{Binding BeaconFrames.Count}"/>
                </TextBlock>
                <TextBlock Grid.Row="3" FontSize="14" Foreground="{ThemeResource TextBoxDisabledForegroundThemeBrush}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Text="{Binding BeaconType}"/>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="BeaconDistanceDataListViewItemTemplate">
        <Grid Height="100">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Image Width="75" Height="75" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.8" Source="ms-appx:///Assets/beacon_black.png"/>
            <Rectangle Fill="{Binding BluetoothAddress, Converter={StaticResource BluetoothAddressToColorConverter}}" Opacity="0.32" Width="80" Height="80" VerticalAlignment="Center" HorizontalAlignment="Center" RadiusX="5" RadiusY="5"/>
            <Grid Grid.Column="1" Padding="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock FontSize="18" Foreground="Black" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Text="{Binding BluetoothAddress, Converter={StaticResource BluetoothAddressToNameConverter}}"/>
                <StackPanel Grid.Row="2" Orientation="Horizontal">
                    <TextBlock FontSize="14" Foreground="{ThemeResource TextBoxDisabledForegroundThemeBrush}" Text="{Binding ProximityRange}"/>
                    <TextBlock FontSize="14" Foreground="{ThemeResource TextBoxDisabledForegroundThemeBrush}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Text="{Binding ProximityStatus}" Margin="5,0,0,0"/>
                </StackPanel>
                <TextBlock Grid.Row="3" FontSize="14" Foreground="{ThemeResource TextBoxDisabledForegroundThemeBrush}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Text="{Binding BeaconType}"/>
            </Grid>
        </Grid>
    </DataTemplate>

    <Style TargetType="TextBlock" x:Key="FramePropertyTitleStyle">
        <Setter Property="Foreground" Value="{ThemeResource CustomColor}"/>
        <!--<Setter Property="FontWeight" Value="Normal" />-->
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Margin" Value="16,0,0,0"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="FramePropertyValueStyle">
        <Setter Property="Foreground" Value="{ThemeResource TextBoxDisabledForegroundThemeBrush}"/>
        <Setter Property="FontWeight" Value="SemiLight" />
        <Setter Property="FontSize" Value="20" />
    </Style>

    <ResourceDictionary.ThemeDictionaries>

        <!--  RequestedTheme=Light  -->

        <ResourceDictionary x:Key="Light">

            <SolidColorBrush x:Key="ExtendedSplashBackground" Color="{ThemeResource ContrastColor}" />
            <SolidColorBrush x:Key="ExtendedSplashForeground" Color="{ThemeResource CustomColor}" />

            <SolidColorBrush x:Key="ModalBackground" Opacity=".5" Color="{ThemeResource CustomColor}" />

            <Style TargetType="controls:HamburgerMenu">
                <Setter Property="AccentColor" Value="{ThemeResource CustomColor}" />
                <Setter Property="VisualStateNarrowMinWidth" Value="{ThemeResource NarrowMinWidth}" />
                <Setter Property="VisualStateNormalMinWidth" Value="{ThemeResource NormalMinWidth}" />
                <Setter Property="VisualStateWideMinWidth" Value="{ThemeResource WideMinWidth}" />
            </Style>

            <Style TargetType="controls:PageHeader">
                <Setter Property="Background" Value="{ThemeResource CustomColorBrush}" />
                <Setter Property="Foreground" Value="{ThemeResource ContrastColorBrush}" />
                <Setter Property="VisualStateNarrowMinWidth" Value="{ThemeResource NarrowMinWidth}" />
                <Setter Property="VisualStateNormalMinWidth" Value="{ThemeResource NormalMinWidth}" />
            </Style>

            <Style TargetType="controls:Resizer">
                <Setter Property="GrabberBrush" Value="{ThemeResource CustomColorBrush}" />
                <Setter Property="GrabberVisibility" Value="Visible" />
            </Style>

        </ResourceDictionary>

        <!--  RequestedTheme=Dark  -->
        <!--  Please note the Template 10 default is Light (the current, Microsoft standard)  -->

        <ResourceDictionary x:Key="Default">

            <SolidColorBrush x:Key="ExtendedSplashBackground" Color="{ThemeResource ContrastColor}" />
            <SolidColorBrush x:Key="ExtendedSplashForeground" Color="{ThemeResource CustomColor}" />

            <SolidColorBrush x:Key="ModalBackground" Opacity=".5" Color="{ThemeResource CustomColor}" />

            <Style TargetType="controls:HamburgerMenu">
                <Setter Property="AccentColor" Value="{ThemeResource CustomColor}" />
                <Setter Property="VisualStateNarrowMinWidth" Value="{ThemeResource NarrowMinWidth}" />
                <Setter Property="VisualStateNormalMinWidth" Value="{ThemeResource NormalMinWidth}" />
                <Setter Property="VisualStateWideMinWidth" Value="{ThemeResource WideMinWidth}" />
            </Style>

            <Style TargetType="controls:PageHeader">
                <Setter Property="Background" Value="{ThemeResource CustomColorBrush}" />
                <Setter Property="Foreground" Value="{ThemeResource ContrastColorBrush}" />
                <Setter Property="VisualStateNarrowMinWidth" Value="{ThemeResource NarrowMinWidth}" />
                <Setter Property="VisualStateNormalMinWidth" Value="{ThemeResource NormalMinWidth}" />
            </Style>

            <Style TargetType="controls:Resizer">
                <Setter Property="GrabberBrush" Value="{ThemeResource CustomColorBrush}" />
                <Setter Property="GrabberVisibility" Value="Visible" />
            </Style>

        </ResourceDictionary>

        <!--  RequestedTheme=HighContrast  -->

        <ResourceDictionary x:Key="HighContrast">

            <SolidColorBrush x:Key="ExtendedSplashBackground" Color="Black" />
            <SolidColorBrush x:Key="ExtendedSplashForeground" Color="White" />

            <SolidColorBrush x:Key="ModalBackground" Color="Black" />

            <Style TargetType="controls:HamburgerMenu">
                <Setter Property="HamburgerBackground" Value="Black" />
                <Setter Property="HamburgerForeground" Value="White" />
                <Setter Property="NavAreaBackground" Value="Black" />
                <Setter Property="NavButtonBackground" Value="White" />
                <Setter Property="NavButtonCheckedBackground" Value="White" />
                <Setter Property="NavButtonForeground" Value="Black" />
                <Setter Property="NavButtonHoverBackground" Value="White" />
                <Setter Property="SecondarySeparator" Value="White" />
                <Setter Property="VisualStateNarrowMinWidth" Value="{ThemeResource NarrowMinWidth}" />
                <Setter Property="VisualStateNormalMinWidth" Value="{ThemeResource NormalMinWidth}" />
                <Setter Property="VisualStateWideMinWidth" Value="{ThemeResource WideMinWidth}" />
            </Style>

            <Style TargetType="controls:PageHeader">
                <Setter Property="Background" Value="Black" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="VisualStateNarrowMinWidth" Value="{ThemeResource NarrowMinWidth}" />
                <Setter Property="VisualStateNormalMinWidth" Value="{ThemeResource NormalMinWidth}" />
            </Style>

            <Style TargetType="controls:Resizer">
                <Setter Property="GrabberBrush" Value="White" />
                <Setter Property="GrabberVisibility" Value="Visible" />
            </Style>

        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>
</ResourceDictionary>

